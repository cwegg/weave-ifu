Stage 1
=======

**Contributors:** David Murphy, Luis Peralta

Input, output and auxiliar file(s)
----------------------------------

* **Input:**

  + A Python dictionary which items contain the information needed to fill the
    columns of the *input IFU driver catalogue*.

* **Output:**

  + A FITS file containing the *input IFU driver catalogue*.  

* **Auxiliar file(s):**

  + *aux/ifu_driver_template.fits*:
    A template with the structure of the *input IFU driver catalogue*.


Software
--------

* *populate_fits_table_template.py*:

  A Python module to populate the template of the *input IFU driver catalogue*
  with the information contained in a dictionary.

* *create_ifu_driver_cat.py*:

  An example script illustrating how to use the module
  *populate_fits_table_template* to create an *input IFU driver catalogue*.

* *check_ifu_driver_cat.py*:

  A script for making some verifications on the contents of a *input IFU driver
  catalogue*.
  **To be developed.**


Extra software
--------------

* *create_ifu_driver_template.py*:

  A script for creating the template with the structure of the *input IFU driver
  catalogue*.
  **Only useful for CPS team.**

* *create_ifu_driver_cat_cheating.py*:

  A script for creating an *input IFU driver catalogue*, cheating its data from
  the input XML files of stage 5.
  **Only useful for CPS team.**

* *get_data_from_xmls.py*:

  A Python module used in *create_ifu_driver_cat_cheating.py* for cheating the
  information from stage 5.
  **Obviously, this module will not be needed in real workflow.**

